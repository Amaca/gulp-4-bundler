!function a(i,c,u){function l(t,e){if(!c[t]){if(!i[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(f)return f(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var o=c[t]={exports:{}};i[t][0].call(o.exports,function(e){return l(i[t][1][e]||e)},o,o.exports,a,i,c,u)}return c[t].exports}for(var f="function"==typeof require&&require,e=0;e<u.length;e++)l(u[e]);return l}({1:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var r,o=(r=e("./shared/dom"))&&r.__esModule?r:{default:r};function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n,r;return t=e,(n=[{key:"init",value:function(){var e=document.querySelector("body");document.querySelector(".page");o.default.detect(e),e.classList.add("ready")}}])&&a(t.prototype,n),r&&a(t,r),e}(),c=new(n.default=i);window.onload=function(){c.init()}},{"./shared/dom":2}],2:[function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var o=function(){function m(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,m)}var e,t,n;return e=m,n=[{key:"detect",value:function(r){var e=navigator.userAgent.toLowerCase(),t=-1<e.indexOf("msie"),n=-1<e.indexOf("firefox"),o=-1<e.toLowerCase().indexOf("op"),a=-1<e.indexOf("chrome"),i=-1<e.indexOf("safari");a&&i&&(i=!1),a&&o&&(a=!1);var c=e.match(/android/i),u=e.match(/blackberry/i),l=e.match(/iphone|ipad|ipod/i),f=e.match(/opera mini/i),s=e.match(/iemobile/i)||navigator.userAgent.match(/wpdesktop/i),d={chrome:a,explorer:t,firefox:n,safari:i,opera:o,android:c,blackberry:u,ios:l,operamini:f,iemobile:s,mobile:c||u||l||f||s,overscroll:"MacIntel"===navigator.platform&&"function"==typeof navigator.getBattery};Object.assign(m,d),Object.keys(d).forEach(function(e){d[e]&&r.classList.add(e)});document.addEventListener("touchstart",function e(){document.removeEventListener("touchstart",e),m.touch=!0,r.classList.add("touch")});document.addEventListener("mousedown",function e(){document.removeEventListener("mousedown",e),m.mouse=!0,r.classList.add("mouse")});document.addEventListener("scroll",function e(){var t=Utils.now();if(m.lastScrollTime){var n=t-m.lastScrollTime;n<5&&(document.removeEventListener("scroll",e),m.fastscroll=!0,r.classList.add("fastscroll"),console.log("scroll",n))}m.lastScrollTime=t})}},{key:"fragmentFirstElement",value:function(e){return Array.prototype.slice.call(e.children).find(function(e){return e.nodeType===Node.ELEMENT_NODE})}},{key:"fragmentFromHTML",value:function(e){return document.createRange().createContextualFragment(e)}},{key:"scrollTop",value:function(){return document&&document.defaultView?document.defaultView.pageYOffset:0}}],(t=null)&&r(e.prototype,t),n&&r(e,n),m}();n.default=o},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,